import numpy as np
import pandas as pd
import matplotlib.pyplot as pl
import scanpy as sc
import anndata
from scipy.sparse import coo_matrix, csr_matrix
import os
from sklearn.ensemble import RandomForestClassifier
from scipy import io

X = io.mmread('matrix.mtx')
adata = anndata.AnnData(X=X.transpose().tocsr())
metadata = pd.read_csv('metadata.csv')
with open('gene_names.csv', 'r') as f:
    gene_names = f.read().splitlines()

adata.obs = metadata
adata.obs.index = adata.obs['barcodes']
adata.var.index = gene_names

sc.pp.calculate_qc_metrics(adata, percent_top=None, log1p=False, inplace=True)
sc.pp.normalize_total(adata, target_sum=1e4)
sc.pp.log1p(adata)
sc.pp.scale(adata, max_value=10)

sc.tl.pca(adata, svd_solver='arpack')
sc.pp.neighbors(adata, n_neighbors=30, n_pcs=9)
sc.tl.leiden(adata, resolution= 0.2)
sc.tl.paga(adata)
sc.pl.paga(adata, plot=False)
sc.tl.umap(adata, init_pos='paga')

#Define Label
def label(x):
    if x == 'Endothelial':
        return 1
    else:
        return 0

y = adata.obs.level_3.map(label)

#Create Random Forest
rf = RandomForestClassifier(n_jobs = 10, n_estimators=10)
rf.fit(adata.X, y)

pd.DataFrame(rf.feature_importances_,
                  index = adata.var_names).sort_values(0, ascending = False)

predictions = rf.predict(adata2.X)

sc.pl.umap(adata2, color = 'predictions')

